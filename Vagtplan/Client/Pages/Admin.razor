@page "/koordinator"
@using Musikfestival.Shared.Models
@using MongoDB.Bson
@using MongoDB.Driver
@inject HttpClient Http;
@inject Blazored.LocalStorage.ILocalStorageService localStore

<link rel="stylesheet" href="css/UI/Admin.css" />

@if (vagterne == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <br />
    <h3>Alle vagter</h3>
    <button @onclick="() => OpretVagt()">Opret ny vagt</button>
    <table class="table">
        <thead>
            <tr>
                <th>Dato</th>
                <th>Lokation</th>
                <th>Prioritet</th>
                <th>Opgave</th>
                <th>Antal</th>
                <th>Beskrivlse</th>
                <th>Start</th>
                <th>Slut</th>
                <th>Rediger vagt</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var vagter in vagterne)
            {
                <tr>
                    <td>@vagter.Dato</td>
                    <td>@vagter.Lokation</td>
                    <td>@vagter.Rangering</td>
                    <td>@vagter.Type</td>
                    <td>@vagter.Antal</td>
                    <td>@vagter.Beskrivelse</td>
                    <td>@vagter.Start</td>
                    <td>@vagter.Slut</td>
                    <td>
                        @if (!isEditing || vagter != valgt)
                        {
                            <!-- Display non-editable fields -->
                            <button @onclick="() => StartEditing(vagter)" style="color:white; background-color: #191A3B;">Rediger</button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Display input fields for editing -->
    @if (isEditing || isEditing2)
        {
            <div>
                <p>Dato: <input @bind="valgt.Dato" /></p>
                <p>Lokation: <input @bind="valgt.Lokation" /></p>
                <p>Prioritet: <input @bind="valgt.Rangering" /></p>
                <p>Type: <input @bind="valgt.Type" /></p>
                <p>Antal: <input @bind="valgt.Antal" /></p>
                <p>Beskrivelse: <input @bind="valgt.Beskrivelse" /></p>
                <p>Start: <input @bind="valgt.Start" /></p>
                <p>Slut: <input @bind="valgt.Slut" /></p>
            <button @onclick="() => UpdatePlan(valgt)" style="color: white; background-color: #191A3B">Gem</button>
            <button @onclick="CancelEdit" style="color: white; background-color: #191A3B">Annuller</button>
            </div>
        }
    }

@code {
    // Initialiser Vagter objekter "vagterne" så de respektive attributter kan læses og printes ud i en liste fra vores database > vagter.
    // Samt en liste af <Vagter> "valgte" så vi kan gemme objekterne og rykke rundt på dem på vagtplan siden.
    private Vagter[]? vagterne;
    private List<Vagter> valgte = new List<Vagter>();


    private bool isEditing = false;
    private bool isEditing2 = false;
    private Vagter valgt = new Vagter();
    private void StartEditing(Vagter vagt)
    {

        valgt = vagt;
        isEditing = true;

    }

    public void OpretVagt()
    {
        isEditing2 = true;
    }

    public void CancelEdit()
    {
        isEditing = false;
    }

    Vagter ReadVagter = new();
    private EditContext aEditContext;

    protected override async Task OnInitializedAsync()
    {
        aEditContext = new EditContext(ReadVagter);
        vagterne = await Http.GetFromJsonAsync<Vagter[]>("/api/vagter");
    }

    Vagter nyvagt = new();
    private async Task CreatePlan(Vagter nyvagt)
    {
        await Http.PostAsJsonAsync<Vagter>("/api/vagter", nyvagt);
    }

    // Opret en ny instans af Vagter ved klik på HandleValidSubmit, og send hver af de valgte vagter til vores kollektion "vagter"

    Vagter vagt = new();
    private async Task UpdatePlan(Vagter vagt)
    {
        var response = await Http.PutAsJsonAsync("/api/vagter", vagt);
        // Gem ændringer, f.eks. ved at sende dem til serveren

        if (response.IsSuccessStatusCode)
        {
            Console.WriteLine("Changes saved successfully.");
            isEditing = false;
        }
        else
        {
            Console.WriteLine("Failed to save changes.");
            // Handle the failure, e.g., show an error message
        }
    }
}