@page "/Koordinator"
@using Musikfestival.Shared.Models
@using MongoDB.Bson
@inject HttpClient Http

<PageTitle>Koordinatorside</PageTitle>
@if (vagterne == null)
{
    <p><em>DU ER DUM</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Dato</th>
                <th>Lokation</th>
                <th>Rangering</th>
                <th>Opgave</th>
                <th>Antal</th>
                <th>Beskrivlse</th>
                <th>Start</th>
                <th>Slut</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var vagter in vagterne)
            {
                <tr>
                    <td>
                        <h2>@vagter.Dato</h2>
                    </td>
                    <td>
                        <h2>@vagter.Lokation</h2>
                    </td>
                    <td>
                        <h2>@vagter.Rangering</h2>
                    </td>
                    <td>
                        <h2>@vagter.Type</h2>
                    </td>
                    <td>
                        <h2>@vagter.Antal</h2>
                    </td>
                    <td>
                        <h2>@vagter.Beskrivelse</h2>
                    </td>
                    <td>
                        <h2>@vagter.Start</h2>
                    </td>
                    <td>
                        <h2>@vagter.Slut</h2>
                    </td>
                    <img src="Billeder/Update.png" alt="Button Image" class="UpdateButton" style="width: 38px; height: 45px;" onclick="" />
                    <img src="Billeder/Delete.png" alt="Button Image" class="DeleteButton" style="width: 38px; height: 45px;" onclick="" />
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private Vagter[]? vagterne;

    protected override async Task OnInitializedAsync()
    {
        vagterne = await Http.GetFromJsonAsync<Vagter[]>("/api/vagter");

    }
}
<!--
<table>
    <thead>
        <tr>
            <th>Dato</th>
            <th>Lokation</th>
            <th>Rangering</th>
            <th>Type</th>
            <th>Antal</th>
            <th>Beskrivlse</th>
            <th>Start</th>
            <th>Slut</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var vagter in f)
        {
            <tr>
                @if (vagter.IsEditing)
                {
                    <td>
                        <input type="text" class="form-control" placeholder="01/01" @bind="@vagter.Dato" />
                    </td>
                    <td>
                        <input type="text" class="form-control" placeholder="Område A" @bind="@vagter.Lokation" />
                    </td>
                    <td>
                        <input type="text" class="form-control" placeholder="1-3" @bind="@vagter.Rangering" />
                    </td>
                    <td>
                        <input type="text" class="form-control" placeholder="Skrald" @bind="@vagter.Type" />
                    </td>
                    <td>
                        <input type="text" class="form-control" placeholder="100" @bind="@vagter.Antal" />
                    </td>
                    <td>
                        <input type="text" class="form-control" placeholder="..." @bind="@vagter.Beskrivelse" />
                    </td>
                    <td>
                        <input type="text" class="form-control" placeholder="00:00" @bind="@vagter.Start" />
                    </td>
                    <td>
                        <input type="text" class="form-control" placeholder="00:00" @bind="@vagter.Slut" />
                    </td>
                    <td>
                        <button type="button" class="btn btn-link" @onclick="() => EnableEditing(false, vagter)">
                            <i class="fas fa-window-close"></i>
                        </button>
                        <button type="button" class="btn btn-link" @onclick="() => UpdateVagtplan(vagter)">
                            <i class="fas fa-check-square"></i>
                        </button>
                    </td>
                }
                else
                {
                    <td>@vagter.Dato</td>
                    <td>@vagter.Lokation</td>
                    <td>@vagter.Rangering</td>
                    <td>@vagter.Type</td>
                    <td>@vagter.Antal</td>
                    <td>@vagter.Beskrivelse</td>
                    <td>@vagter.Start</td>
                    <td>@vagter.Slut</td>
                    <td>
                        <button type="button" class="btn btn-link" @onclick="() => EnableEditing(true, vagter)">
                            <i class="fas fa-pen"></i>
                        </button>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

@code {
    private void EnableEditing(bool flag, Vagter vagter)
    {
        vagter.IsEditing = flag;
    }

    private async Task UpdateVagtplan(Vagter vagter)
    {

       fizze = await Http.GetFromJsonAsync<Vagter[]>("/api/vagter");
    }
}
-->
